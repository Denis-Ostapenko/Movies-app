{"version":3,"sources":["api-movies/api-movies.js","components/movies-list-item/no-pictures.png","components/movies-list-item/movies-list-item.js","components/movies-list/movies-list.js","components/search-panel/search-panel.js","components/tabs/tabs.js","components/app/app.js","index.js"],"names":["ApiMovies","apiBase","apiKey","requestGet","url","fetch","then","res","ok","Error","status","json","search","page","a","this","totalPages","total_pages","list","results","genres","MoviesListItem","itemData","ratingСhanges","title","backdropPath","overview","releaseDate","genreIds","voteAverage","ratingValue","tab","map","item","className","Math","floor","random","cover","noPictures","label","length","ind","slice","lastIndexOf","header","borderColor","src","alt","style","defaultValue","count","onChange","defaultProps","MoviesList","props","onPageChange","loading","appDate","error","notFound","searchValue","rating","ratingMoviesList","elements","id","prop","errorMessage","message","description","type","showIcon","onNotFound","spinner","size","content","onPagination","defaultCurrent","total","defaultPageSize","hideOnSinglePage","showSizeChanger","SearchPanel","onInputChange","placeholder","Tabs","state","active","rated","getSearch","fun","setState","getRated","classSearch","classRated","onClick","Component","App","JSON","parse","localStorage","getItem","apiMovies","debouncedGetList","debounce","getResource","inputValue","moviesArr","movie","release_date","poster_path","vote_average","genre_ids","getGenre","catch","onError","event","preventDefault","target","value","i","findIndex","el","oldItem","newItem","perevProps","prevState","componentLoading","getGenres","newMoviesArr","arrGenreIds","forEach","element","genre","name","push","setItem","stringify","searchPanel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35246d88.chunk.js","sourcesContent":["export default class ApiMovies {\n  apiBase = 'https://api.themoviedb.org/3/';\n\n  apiKey = 'a4d0b37d32322c580bdd559932e85f65';\n\n  requestGet = (url) =>\n    fetch(url).then((res) => {\n      if (!res.ok) {\n        throw new Error(`error fetch URL ${url}, response status ${res.status}`);\n      }\n      return res.json();\n    });\n\n  async getResource(search, page) {\n    const url = `${this.apiBase}search/movie?api_key=${this.apiKey}&language=en-US&query=${search}&page=${page}&include_adult=false`;\n    const res = await this.requestGet(url);\n    return {\n      totalPages: res.total_pages,\n      list: res.results,\n    };\n  }\n\n  async getGenres() {\n    const url = `${this.apiBase}genre/movie/list?api_key=${this.apiKey}&language=en-US`;\n    const res = await this.requestGet(url);\n    return res.genres;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/no-pictures.5533b14a.png\";","import React from 'react';\nimport { Rate } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport noPictures from './no-pictures.png';\nimport './movies-list-item.css';\n\nconst MoviesListItem = ({ itemData, ratingСhanges }) => {\n  const { title, backdropPath, overview, releaseDate, genreIds, voteAverage, ratingValue } = itemData;\n  const tab = genreIds.map((item) => (\n    <div key={Math.floor(Math.random() * (10000 - 1)) + 1} className=\"film-details__tab\">\n      {item}\n    </div>\n  ));\n\n  const cover = backdropPath !== null ? `https://image.tmdb.org/t/p/w200/${backdropPath}` : noPictures;\n\n  let label = overview;\n  if (overview.length > 125) {\n    const ind = overview.slice(0, 125).lastIndexOf(' ');\n    label = `${overview.slice(0, ind)} ...`;\n  }\n\n  let header = title;\n  if (title.length > 25) {\n    const ind = title.slice(0, 25).lastIndexOf(' ');\n    header = `${title.slice(0, ind)} ...`;\n  }\n\n  let borderColor = '#E90000';\n  if (voteAverage >= 3 && voteAverage < 5) {\n    borderColor = '#E97E00';\n  }\n  if (voteAverage >= 5 && voteAverage < 7) {\n    borderColor = '#E9D100';\n  }\n  if (voteAverage >= 7) {\n    borderColor = '#66E900';\n  }\n\n  return (\n    <>\n      <div className=\"film-cover-cotainer\">\n        <img src={cover} alt=\"film\" className=\"film-cover\" />\n      </div>\n      <div className=\"film-details\">\n        <h3 className=\"film-details__header\">{header}</h3>\n        <div className=\"film-details__rating\" style={{ borderColor }}>\n          <span>{voteAverage}</span>\n        </div>\n        <span className=\"film-details__date\">{releaseDate}</span>\n        <div>{tab}</div>\n        <p className=\"film-details__text\">{label}</p>\n        <div className=\"film-details__stars\">\n          <Rate defaultValue={ratingValue} count={10} onChange={ratingСhanges} />\n        </div>\n      </div>\n    </>\n  );\n};\nMoviesListItem.defaultProps = {\n  itemData: {},\n  ratingСhanges: () => {},\n};\n\nMoviesListItem.propTypes = {\n  itemData: PropTypes.shape({\n    title: PropTypes.string,\n    backdropPath: PropTypes.string,\n    overview: PropTypes.string,\n    releaseDate: PropTypes.string,\n    genreIds: PropTypes.arrayOf(PropTypes.string),\n    voteAverage: PropTypes.number,\n    ratingValue: PropTypes.number,\n  }),\n  ratingСhanges: PropTypes.func,\n};\n\nexport default MoviesListItem;\n","import React from 'react';\nimport { Pagination, Spin, Alert } from 'antd';\nimport PropTypes from 'prop-types';\nimport MoviesListItem from '../movies-list-item/movies-list-item';\nimport './movies-list.css';\n\nconst MoviesList = ({ props, onPageChange, ratingСhanges }) => {\n  const { totalPages, loading, page, appDate, error, notFound, searchValue, rating, ratingMoviesList } = props;\n  const movieslist = !rating ? appDate : ratingMoviesList;\n  const elements = movieslist.map((item) => {\n    const { id, ...prop } = item;\n    const ratingСhange = (ratingValue) => {\n      ratingСhanges(ratingValue, item, id);\n    };\n    return (\n      <li key={id} className=\"movies-list-item\">\n        <MoviesListItem itemData={prop} ratingСhanges={ratingСhange} />\n      </li>\n    );\n  });\n  const errorMessage =\n    error && searchValue !== '' ? (\n      <Alert message=\"Error\" description=\"Oops, something went wrong :-(\" type=\"error\" showIcon />\n    ) : null;\n  const onNotFound =\n    !error && !loading && notFound && !rating ? (\n      <Alert message=\"No results were found for your search!\" type=\"info\" showIcon />\n    ) : null;\n  const spinner = loading ? <Spin size=\"large\" /> : null;\n  const content = !error && !loading ? <ul className=\"movies-list\">{elements}</ul> : null;\n  const onPagination =\n    appDate.length !== 0 && !error && searchValue !== '' && !loading && !rating ? (\n      <Pagination\n        size=\"small\"\n        defaultCurrent={page}\n        total={totalPages * 20}\n        defaultPageSize={20}\n        onChange={onPageChange}\n        hideOnSinglePage\n        showSizeChanger={false}\n      />\n    ) : null;\n  return (\n    <>\n      {spinner}\n      {content}\n      {onNotFound}\n      {errorMessage}\n      {onPagination}\n    </>\n  );\n};\nMoviesList.defaultProps = {\n  props: {},\n  totalPages: 0,\n  loading: false,\n  page: 0,\n  appDate: {},\n  error: false,\n  notFound: false,\n  searchValue: '',\n  rating: false,\n  ratingMoviesList: {},\n  onPageChange: () => {},\n  ratingСhanges: () => {},\n};\n\nMoviesList.propTypes = {\n  props: PropTypes.shape({\n    totalPages: PropTypes.number,\n    loading: PropTypes.bool,\n    page: PropTypes.number,\n    appDate: PropTypes.arrayOf(PropTypes.object),\n    error: PropTypes.bool,\n    notFound: PropTypes.bool,\n    searchValue: PropTypes.string,\n    rating: PropTypes.bool,\n    ratingMoviesList: PropTypes.arrayOf(PropTypes.object),\n    onPageChange: PropTypes.func,\n    ratingСhanges: PropTypes.func,\n  }),\n  totalPages: PropTypes.number,\n  loading: PropTypes.bool,\n  page: PropTypes.number,\n  appDate: PropTypes.objectOf(PropTypes.array),\n  error: PropTypes.bool,\n  notFound: PropTypes.bool,\n  searchValue: PropTypes.string,\n  rating: PropTypes.bool,\n  ratingMoviesList: PropTypes.objectOf(PropTypes.array),\n  onPageChange: PropTypes.func,\n  ratingСhanges: PropTypes.func,\n};\n\nexport default MoviesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './search-panel.css';\n\nconst SearchPanel = ({ onInputChange }) => (\n  <div className=\"search-form\">\n    <input className=\"search-panel\" type=\"search\" placeholder=\"Type to search...\" onChange={onInputChange} />\n  </div>\n);\nSearchPanel.propTypes = {\n  onInputChange: PropTypes.func,\n};\nSearchPanel.defaultProps = {\n  onInputChange: () => {},\n};\nexport default SearchPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tabs.css';\n\nexport default class Tabs extends Component {\n  state = {\n    search: { active: true },\n    rated: { active: false },\n  };\n\n  getSearch = (fun) => {\n    fun();\n    this.setState({ search: { active: true }, rated: { active: false } });\n  };\n\n  getRated = (fun) => {\n    fun();\n    this.setState({ search: { active: false }, rated: { active: true } });\n  };\n\n  render() {\n    const { getRated, getSearch } = this.props;\n    const { search, rated } = this.state;\n    const classSearch = search.active ? 'tabs-button tabs-button--active' : 'tabs-button';\n    const classRated = rated.active ? 'tabs-button tabs-button--active' : 'tabs-button';\n\n    return (\n      <div>\n        <button type=\"button\" className={classSearch} onClick={() => this.getSearch(getSearch)}>\n          Search\n        </button>\n        <button type=\"button\" className={classRated} onClick={() => this.getRated(getRated)}>\n          Rated\n        </button>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  getRated: PropTypes.func,\n  getSearch: PropTypes.func,\n};\nTabs.defaultProps = {\n  getSearch: () => {},\n  getRated: () => {},\n};\n","import React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport ApiMovies from '../../api-movies/api-movies';\nimport MoviesList from '../movies-list/movies-list';\nimport SearchPanel from '../search-panel/search-panel';\nimport Tabs from '../tabs/tabs';\n\nimport './app.css';\n\nexport default class App extends Component {\n  state = {\n    searchValue: '',\n    totalPages: 0,\n    page: 0,\n    loading: false,\n    error: false,\n    notFound: false,\n    rating: false,\n    ratingMoviesList: JSON.parse(localStorage.getItem('ratingMoviesList')) || [],\n    appDate: [],\n  };\n\n  apiMovies = new ApiMovies();\n\n  debouncedGetList = debounce((searchValue, page) => this.getResource(searchValue, page), 500);\n\n  componentDidUpdate(perevProps, prevState) {\n    const { searchValue, page } = this.state;\n    if (searchValue !== prevState.searchValue || page !== prevState.page) {\n      this.componentLoading();\n      this.debouncedGetList(searchValue, page);\n    }\n  }\n\n  getGenre(moviesArr, totalPages, page, inputValue) {\n    this.apiMovies\n      .getGenres()\n      .then((res) => {\n        const newMoviesArr = moviesArr.map((movie) => {\n          const arrGenreIds = [];\n          movie.genreIds.forEach((element) => {\n            res.forEach((genre) => {\n              const { id, name } = genre;\n              if (id === element) {\n                arrGenreIds.push(name);\n              }\n            });\n          });\n          const newMovie = { ...movie, genreIds: arrGenreIds };\n          return newMovie;\n        });\n        this.setState(() => ({\n          totalPages,\n          appDate: [...newMoviesArr],\n          page,\n          loading: false,\n          notFound: false,\n          searchValue: inputValue,\n        }));\n      })\n      .then(() => {\n        const { appDate } = this.state;\n        if (appDate.length === 0) {\n          this.setState({\n            notFound: true,\n          });\n        }\n      });\n  };\n\n  getResource = (inputValue, page = 1) => {\n    this.apiMovies\n      .getResource(inputValue, page)\n      .then(({ totalPages, list }) => {\n        const moviesArr = list.map((movie) => {\n          const {\n            title,\n            release_date: releaseDate,\n            id,\n            poster_path: posterPath,\n            overview,\n            vote_average: voteAverage,\n            genre_ids: genreIds,\n          } = movie;\n          return { title, releaseDate, backdropPath: posterPath, overview, voteAverage, genreIds, id };\n        });\n        this.getGenre(moviesArr, totalPages, page, inputValue);\n      })\n      .catch(this.onError);\n  };\n\n  onPageChange = (event) => {\n    this.setState({\n      page: event,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  onInputChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      searchValue: event.target.value,\n      page: 1,\n    });\n  };\n\n  ratingСhanges = (ratingValue, item, id) => {\n    this.setState(({ ratingMoviesList }) => {\n      const i = ratingMoviesList.findIndex((el) => el.id === id);\n      const oldItem = i !== -1 ? ratingMoviesList[i] : { ...item };\n      const newItem = { ...oldItem, ratingValue };\n      const newArr =\n        i !== -1\n          ? [...ratingMoviesList.slice(0, i), newItem, ...ratingMoviesList.slice(i + 1)]\n          : [...ratingMoviesList, newItem];\n      return {\n        ratingMoviesList: newArr,\n      };\n    });\n  };\n\n  getRated = () => {\n    this.setState({ rating: true });\n  };\n\n  getSearch = () => {\n    this.setState({ rating: false });\n  };\n\n  componentLoading() {\n    this.setState({\n      loading: true,\n      error: false,\n      notFound: false,\n    });\n  }\n\n  render() {\n    const { searchValue, totalPages, loading, page, appDate, error, notFound, rating, ratingMoviesList } = this.state;\n    localStorage.setItem('ratingMoviesList', JSON.stringify(ratingMoviesList));\n    const searchPanel = !rating ? <SearchPanel onInputChange={this.onInputChange} /> : null;\n    return (\n      <div className=\"container\">\n        <Tabs getRated={this.getRated} getSearch={this.getSearch} />\n        {searchPanel}\n        <MoviesList\n          props={{ totalPages, searchValue, loading, page, appDate, error, notFound, rating, ratingMoviesList }}\n          onPageChange={this.onPageChange}\n          ratingСhanges={this.ratingСhanges}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}